<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="10" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Suite2" duration-ms="99713" started-at="2019-04-14T11:58:14Z" finished-at="2019-04-14T11:59:54Z">
    <groups>
      <group name="Sanity">
        <method signature="ContactUsTests.TestCreateQueryWithRequiredFields()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestCreateQueryWithRequiredFields" class="tests.ui.ContactUsTests"/>
        <method signature="LandingPageTests.TestNavigateFromContactMenuOption()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="TestNavigateFromContactMenuOption" class="tests.ui.LandingPageTests"/>
        <method signature="LandingPageTests.TestNavigateFromContactUsLink()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="TestNavigateFromContactUsLink" class="tests.ui.LandingPageTests"/>
      </group> <!-- Sanity -->
      <group name="UI">
        <method signature="ContactUsTests.TestCreateQueryWithRequiredFields()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestCreateQueryWithRequiredFields" class="tests.ui.ContactUsTests"/>
        <method signature="LandingPageTests.TestNavigateFromContactMenuOption()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="TestNavigateFromContactMenuOption" class="tests.ui.LandingPageTests"/>
        <method signature="LandingPageTests.TestNavigateFromContactUsLink()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="TestNavigateFromContactUsLink" class="tests.ui.LandingPageTests"/>
      </group> <!-- UI -->
    </groups>
    <test name="all-tests" duration-ms="99713" started-at="2019-04-14T11:58:14Z" finished-at="2019-04-14T11:59:54Z">
      <class name="tests.ui.LandingPageTests">
        <test-method status="PASS" signature="baseTestBeforeClass()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="baseTestBeforeClass" is-config="true" duration-ms="1" started-at="2019-04-14T11:59:20Z" finished-at="2019-04-14T11:59:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTestBeforeClass -->
        <test-method status="PASS" signature="initializeDriver()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="initializeDriver" is-config="true" duration-ms="2525" started-at="2019-04-14T11:59:20Z" finished-at="2019-04-14T11:59:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeDriver -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="beforeClass" is-config="true" duration-ms="8651" started-at="2019-04-14T11:59:22Z" finished-at="2019-04-14T11:59:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="beforeMethod" is-config="true" duration-ms="13706" started-at="2019-04-14T11:59:31Z" finished-at="2019-04-14T11:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:59:31Z" finished-at="2019-04-14T11:59:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactMenuOption()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="TestNavigateFromContactMenuOption()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="TestNavigateFromContactMenuOption" duration-ms="3839" started-at="2019-04-14T11:59:45Z" finished-at="2019-04-14T11:59:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNavigateFromContactMenuOption -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="logStartMethod" is-config="true" duration-ms="1" started-at="2019-04-14T11:59:49Z" finished-at="2019-04-14T11:59:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactUsLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:59:49Z" finished-at="2019-04-14T11:59:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactMenuOption()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="beforeMethod" is-config="true" duration-ms="1909" started-at="2019-04-14T11:59:49Z" finished-at="2019-04-14T11:59:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestNavigateFromContactUsLink()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="TestNavigateFromContactUsLink" duration-ms="2463" started-at="2019-04-14T11:59:50Z" finished-at="2019-04-14T11:59:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNavigateFromContactUsLink -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="logEndMethod" is-config="true" duration-ms="1" started-at="2019-04-14T11:59:53Z" finished-at="2019-04-14T11:59:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactUsLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="afterTests()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="afterTests" is-config="true" duration-ms="749" started-at="2019-04-14T11:59:53Z" finished-at="2019-04-14T11:59:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTests -->
        <test-method status="PASS" signature="destroyDriver()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="destroyDriver" is-config="true" duration-ms="0" started-at="2019-04-14T11:59:54Z" finished-at="2019-04-14T11:59:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroyDriver -->
        <test-method status="PASS" signature="baseTestAfterClass()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="baseTestAfterClass" is-config="true" duration-ms="0" started-at="2019-04-14T11:59:54Z" finished-at="2019-04-14T11:59:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTestAfterClass -->
      </class> <!-- tests.ui.LandingPageTests -->
      <class name="tests.ui.ContactUsTests">
        <test-method status="PASS" signature="baseTestBeforeClass()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="baseTestBeforeClass" is-config="true" duration-ms="9" started-at="2019-04-14T11:58:14Z" finished-at="2019-04-14T11:58:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTestBeforeClass -->
        <test-method status="PASS" signature="initializeDriver()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="initializeDriver" is-config="true" duration-ms="3374" started-at="2019-04-14T11:58:14Z" finished-at="2019-04-14T11:58:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeDriver -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeClass" is-config="true" duration-ms="5377" started-at="2019-04-14T11:58:17Z" finished-at="2019-04-14T11:58:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="2" started-at="2019-04-14T11:58:23Z" finished-at="2019-04-14T11:58:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsEmailLabelText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1384" started-at="2019-04-14T11:58:23Z" finished-at="2019-04-14T11:58:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestContactUsEmailLabelText()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestContactUsEmailLabelText" duration-ms="120" started-at="2019-04-14T11:58:24Z" finished-at="2019-04-14T11:58:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestContactUsEmailLabelText -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="1" started-at="2019-04-14T11:58:24Z" finished-at="2019-04-14T11:58:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsEmailLabelText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:58:24Z" finished-at="2019-04-14T11:58:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsTestWithMultipleData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="2168" started-at="2019-04-14T11:58:24Z" finished-at="2019-04-14T11:58:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestContactUsTestWithMultipleData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestContactUsTestWithMultipleData" duration-ms="4139" started-at="2019-04-14T11:58:27Z" data-provider="getData" finished-at="2019-04-14T11:58:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hemant]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Janrao]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hemant.janrao@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test company]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[http://www.testcompany.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Agency]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Algeria]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[9130021557]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Test description]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestContactUsTestWithMultipleData -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:58:31Z" finished-at="2019-04-14T11:58:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsTestWithMultipleData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:58:31Z" finished-at="2019-04-14T11:58:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsTestWithMultipleData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1546" started-at="2019-04-14T11:58:31Z" finished-at="2019-04-14T11:58:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestContactUsTestWithMultipleData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestContactUsTestWithMultipleData" duration-ms="3465" started-at="2019-04-14T11:58:32Z" data-provider="getData" finished-at="2019-04-14T11:58:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hemant]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Janrao]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hemant.janrao@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test company]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[http://www.testcompany.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Agency]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Algeria]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[9130021557]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Test description]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestContactUsTestWithMultipleData -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:58:36Z" finished-at="2019-04-14T11:58:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsTestWithMultipleData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:58:36Z" finished-at="2019-04-14T11:58:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestCreateQueryWithAllFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1297" started-at="2019-04-14T11:58:36Z" finished-at="2019-04-14T11:58:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestCreateQueryWithAllFields()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestCreateQueryWithAllFields" duration-ms="3967" started-at="2019-04-14T11:58:37Z" finished-at="2019-04-14T11:58:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCreateQueryWithAllFields -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:58:41Z" finished-at="2019-04-14T11:58:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestCreateQueryWithAllFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1328" started-at="2019-04-14T11:58:41Z" finished-at="2019-04-14T11:58:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:58:41Z" finished-at="2019-04-14T11:58:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestCreateQueryWithRequiredFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="TestCreateQueryWithRequiredFields()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestCreateQueryWithRequiredFields" duration-ms="3080" started-at="2019-04-14T11:58:42Z" finished-at="2019-04-14T11:58:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCreateQueryWithRequiredFields -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:58:45Z" finished-at="2019-04-14T11:58:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestCreateQueryWithRequiredFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1261" started-at="2019-04-14T11:58:45Z" finished-at="2019-04-14T11:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:58:45Z" finished-at="2019-04-14T11:58:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestGotoPrivacyPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="TestGotoPrivacyPolicyPage()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestGotoPrivacyPolicyPage" duration-ms="1410" started-at="2019-04-14T11:58:47Z" finished-at="2019-04-14T11:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestGotoPrivacyPolicyPage -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:58:48Z" finished-at="2019-04-14T11:58:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestGotoPrivacyPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:58:48Z" finished-at="2019-04-14T11:58:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestMandatoryFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1263" started-at="2019-04-14T11:58:48Z" finished-at="2019-04-14T11:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestMandatoryFields()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestMandatoryFields" duration-ms="14212" started-at="2019-04-14T11:58:49Z" finished-at="2019-04-14T11:59:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMandatoryFields -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:59:04Z" finished-at="2019-04-14T11:59:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestMandatoryFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T11:59:04Z" finished-at="2019-04-14T11:59:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestMoreThan500CharactersNotAllowed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1265" started-at="2019-04-14T11:59:04Z" finished-at="2019-04-14T11:59:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestMoreThan500CharactersNotAllowed()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestMoreThan500CharactersNotAllowed" duration-ms="14195" started-at="2019-04-14T11:59:05Z" finished-at="2019-04-14T11:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMoreThan500CharactersNotAllowed -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="1" started-at="2019-04-14T11:59:19Z" finished-at="2019-04-14T11:59:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestMoreThan500CharactersNotAllowed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="afterTests()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="afterTests" is-config="true" duration-ms="738" started-at="2019-04-14T11:59:19Z" finished-at="2019-04-14T11:59:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTests -->
        <test-method status="PASS" signature="destroyDriver()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="destroyDriver" is-config="true" duration-ms="0" started-at="2019-04-14T11:59:20Z" finished-at="2019-04-14T11:59:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroyDriver -->
        <test-method status="PASS" signature="baseTestAfterClass()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="baseTestAfterClass" is-config="true" duration-ms="0" started-at="2019-04-14T11:59:20Z" finished-at="2019-04-14T11:59:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTestAfterClass -->
      </class> <!-- tests.ui.ContactUsTests -->
    </test> <!-- all-tests -->
  </suite> <!-- Suite2 -->
</testng-results>
