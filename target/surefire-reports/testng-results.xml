<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="10" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Suite2" duration-ms="106972" started-at="2019-04-14T15:06:05Z" finished-at="2019-04-14T15:07:52Z">
    <groups>
      <group name="Sanity">
        <method signature="ContactUsTests.TestCreateQueryWithRequiredFields()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestCreateQueryWithRequiredFields" class="tests.ui.ContactUsTests"/>
        <method signature="LandingPageTests.TestNavigateFromContactMenuOption()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="TestNavigateFromContactMenuOption" class="tests.ui.LandingPageTests"/>
        <method signature="LandingPageTests.TestNavigateFromContactUsLink()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="TestNavigateFromContactUsLink" class="tests.ui.LandingPageTests"/>
      </group> <!-- Sanity -->
      <group name="UI">
        <method signature="ContactUsTests.TestCreateQueryWithRequiredFields()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestCreateQueryWithRequiredFields" class="tests.ui.ContactUsTests"/>
        <method signature="LandingPageTests.TestNavigateFromContactMenuOption()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="TestNavigateFromContactMenuOption" class="tests.ui.LandingPageTests"/>
        <method signature="LandingPageTests.TestNavigateFromContactUsLink()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="TestNavigateFromContactUsLink" class="tests.ui.LandingPageTests"/>
      </group> <!-- UI -->
    </groups>
    <test name="all-tests" duration-ms="106972" started-at="2019-04-14T15:06:05Z" finished-at="2019-04-14T15:07:52Z">
      <class name="tests.ui.LandingPageTests">
        <test-method status="PASS" signature="baseTestBeforeClass()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="baseTestBeforeClass" is-config="true" duration-ms="0" started-at="2019-04-14T15:07:26Z" finished-at="2019-04-14T15:07:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTestBeforeClass -->
        <test-method status="PASS" signature="initializeDriver()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="initializeDriver" is-config="true" duration-ms="2578" started-at="2019-04-14T15:07:26Z" finished-at="2019-04-14T15:07:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeDriver -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="beforeClass" is-config="true" duration-ms="18075" started-at="2019-04-14T15:07:29Z" finished-at="2019-04-14T15:07:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="logStartMethod" is-config="true" duration-ms="1" started-at="2019-04-14T15:07:47Z" finished-at="2019-04-14T15:07:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactMenuOption()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="TestNavigateFromContactMenuOption()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="TestNavigateFromContactMenuOption" duration-ms="2701" started-at="2019-04-14T15:07:47Z" finished-at="2019-04-14T15:07:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNavigateFromContactMenuOption -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:07:50Z" finished-at="2019-04-14T15:07:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactMenuOption()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="TestNavigateFromContactUsLink()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="TestNavigateFromContactUsLink" duration-ms="1819" started-at="2019-04-14T15:07:50Z" finished-at="2019-04-14T15:07:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNavigateFromContactUsLink -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:07:50Z" finished-at="2019-04-14T15:07:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactUsLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:07:51Z" finished-at="2019-04-14T15:07:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactUsLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="afterTests()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="afterTests" is-config="true" duration-ms="763" started-at="2019-04-14T15:07:51Z" finished-at="2019-04-14T15:07:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTests -->
        <test-method status="PASS" signature="baseTestAfterClass()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="baseTestAfterClass" is-config="true" duration-ms="0" started-at="2019-04-14T15:07:52Z" finished-at="2019-04-14T15:07:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTestAfterClass -->
        <test-method status="PASS" signature="destroyDriver()[pri:0, instance:tests.ui.LandingPageTests@345965f2]" name="destroyDriver" is-config="true" duration-ms="0" started-at="2019-04-14T15:07:52Z" finished-at="2019-04-14T15:07:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroyDriver -->
      </class> <!-- tests.ui.LandingPageTests -->
      <class name="tests.ui.ContactUsTests">
        <test-method status="PASS" signature="baseTestBeforeClass()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="baseTestBeforeClass" is-config="true" duration-ms="8" started-at="2019-04-14T15:06:05Z" finished-at="2019-04-14T15:06:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTestBeforeClass -->
        <test-method status="PASS" signature="initializeDriver()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="initializeDriver" is-config="true" duration-ms="3960" started-at="2019-04-14T15:06:05Z" finished-at="2019-04-14T15:06:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeDriver -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeClass" is-config="true" duration-ms="22869" started-at="2019-04-14T15:06:09Z" finished-at="2019-04-14T15:06:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="1" started-at="2019-04-14T15:06:32Z" finished-at="2019-04-14T15:06:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsEmailLabelText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1545" started-at="2019-04-14T15:06:32Z" finished-at="2019-04-14T15:06:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestContactUsEmailLabelText()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestContactUsEmailLabelText" duration-ms="160" started-at="2019-04-14T15:06:34Z" finished-at="2019-04-14T15:06:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestContactUsEmailLabelText -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="1" started-at="2019-04-14T15:06:34Z" finished-at="2019-04-14T15:06:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsEmailLabelText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:06:34Z" finished-at="2019-04-14T15:06:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsTestWithMultipleData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1531" started-at="2019-04-14T15:06:34Z" finished-at="2019-04-14T15:06:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestContactUsTestWithMultipleData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestContactUsTestWithMultipleData" duration-ms="3481" started-at="2019-04-14T15:06:36Z" data-provider="getData" finished-at="2019-04-14T15:06:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hemant]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Janrao]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hemant.janrao@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test company]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[http://www.testcompany.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Network/Exchange]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Algeria]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[9130021557]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Test description]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestContactUsTestWithMultipleData -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="1" started-at="2019-04-14T15:06:39Z" finished-at="2019-04-14T15:06:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsTestWithMultipleData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1498" started-at="2019-04-14T15:06:39Z" finished-at="2019-04-14T15:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:06:39Z" finished-at="2019-04-14T15:06:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsTestWithMultipleData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="TestContactUsTestWithMultipleData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestContactUsTestWithMultipleData" duration-ms="3240" started-at="2019-04-14T15:06:41Z" data-provider="getData" finished-at="2019-04-14T15:06:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ravi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Janrao]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hemant.janrao@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test company]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[http://www.testcompany.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Agency]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Nepal]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[9130021557]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Test description]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestContactUsTestWithMultipleData -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:06:44Z" finished-at="2019-04-14T15:06:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsTestWithMultipleData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:06:44Z" finished-at="2019-04-14T15:06:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestCreateQueryWithAllFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1579" started-at="2019-04-14T15:06:44Z" finished-at="2019-04-14T15:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestCreateQueryWithAllFields()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestCreateQueryWithAllFields" duration-ms="2834" started-at="2019-04-14T15:06:45Z" finished-at="2019-04-14T15:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCreateQueryWithAllFields -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:06:48Z" finished-at="2019-04-14T15:06:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestCreateQueryWithAllFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:06:48Z" finished-at="2019-04-14T15:06:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestCreateQueryWithRequiredFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1620" started-at="2019-04-14T15:06:48Z" finished-at="2019-04-14T15:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestCreateQueryWithRequiredFields()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestCreateQueryWithRequiredFields" duration-ms="2232" started-at="2019-04-14T15:06:50Z" finished-at="2019-04-14T15:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCreateQueryWithRequiredFields -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:06:52Z" finished-at="2019-04-14T15:06:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestCreateQueryWithRequiredFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:06:52Z" finished-at="2019-04-14T15:06:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestGotoPrivacyPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1303" started-at="2019-04-14T15:06:52Z" finished-at="2019-04-14T15:06:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestGotoPrivacyPolicyPage()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestGotoPrivacyPolicyPage" duration-ms="1410" started-at="2019-04-14T15:06:53Z" finished-at="2019-04-14T15:06:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestGotoPrivacyPolicyPage -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="1" started-at="2019-04-14T15:06:55Z" finished-at="2019-04-14T15:06:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestGotoPrivacyPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:06:55Z" finished-at="2019-04-14T15:06:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestMandatoryFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1593" started-at="2019-04-14T15:06:55Z" finished-at="2019-04-14T15:06:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestMandatoryFields()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestMandatoryFields" duration-ms="13467" started-at="2019-04-14T15:06:56Z" finished-at="2019-04-14T15:07:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMandatoryFields -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:07:10Z" finished-at="2019-04-14T15:07:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestMandatoryFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:07:10Z" finished-at="2019-04-14T15:07:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestMoreThan500CharactersNotAllowed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="beforeMethod" is-config="true" duration-ms="1525" started-at="2019-04-14T15:07:10Z" finished-at="2019-04-14T15:07:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestMoreThan500CharactersNotAllowed()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="TestMoreThan500CharactersNotAllowed" duration-ms="14221" started-at="2019-04-14T15:07:11Z" finished-at="2019-04-14T15:07:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMoreThan500CharactersNotAllowed -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-14T15:07:26Z" finished-at="2019-04-14T15:07:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestMoreThan500CharactersNotAllowed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="afterTests()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="afterTests" is-config="true" duration-ms="639" started-at="2019-04-14T15:07:26Z" finished-at="2019-04-14T15:07:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTests -->
        <test-method status="PASS" signature="destroyDriver()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="destroyDriver" is-config="true" duration-ms="1" started-at="2019-04-14T15:07:26Z" finished-at="2019-04-14T15:07:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroyDriver -->
        <test-method status="PASS" signature="baseTestAfterClass()[pri:0, instance:tests.ui.ContactUsTests@6591f517]" name="baseTestAfterClass" is-config="true" duration-ms="0" started-at="2019-04-14T15:07:26Z" finished-at="2019-04-14T15:07:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTestAfterClass -->
      </class> <!-- tests.ui.ContactUsTests -->
    </test> <!-- all-tests -->
  </suite> <!-- Suite2 -->
</testng-results>
