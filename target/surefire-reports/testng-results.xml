<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="11" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Suite2" duration-ms="92548" started-at="2019-04-13T11:04:59Z" finished-at="2019-04-13T11:06:32Z">
    <groups>
      <group name="Sanity">
        <method signature="ContactUsTests.TestCreateQueryWithRequiredFields()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="TestCreateQueryWithRequiredFields" class="tests.ui.ContactUsTests"/>
      </group> <!-- Sanity -->
    </groups>
    <test name="all-tests" duration-ms="92548" started-at="2019-04-13T11:04:59Z" finished-at="2019-04-13T11:06:32Z">
      <class name="tests.ui.LandingPageTests">
        <test-method status="PASS" signature="initializeDriver()[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="initializeDriver" is-config="true" duration-ms="1778" started-at="2019-04-13T11:06:08Z" finished-at="2019-04-13T11:06:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeDriver -->
        <test-method status="PASS" signature="baseTestBeforeClass()[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="baseTestBeforeClass" is-config="true" duration-ms="0" started-at="2019-04-13T11:06:08Z" finished-at="2019-04-13T11:06:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTestBeforeClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="beforeClass" is-config="true" duration-ms="11692" started-at="2019-04-13T11:06:10Z" finished-at="2019-04-13T11:06:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="logStartMethod" is-config="true" duration-ms="1" started-at="2019-04-13T11:06:22Z" finished-at="2019-04-13T11:06:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactMenuOption()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="beforeMethod" is-config="true" duration-ms="2778" started-at="2019-04-13T11:06:22Z" finished-at="2019-04-13T11:06:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestNavigateFromContactMenuOption()[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="TestNavigateFromContactMenuOption" duration-ms="1558" started-at="2019-04-13T11:06:24Z" finished-at="2019-04-13T11:06:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNavigateFromContactMenuOption -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:06:26Z" finished-at="2019-04-13T11:06:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactMenuOption()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:06:26Z" finished-at="2019-04-13T11:06:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactUsLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="beforeMethod" is-config="true" duration-ms="1439" started-at="2019-04-13T11:06:26Z" finished-at="2019-04-13T11:06:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="TestNavigateFromContactUsLink()[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="TestNavigateFromContactUsLink" duration-ms="46" started-at="2019-04-13T11:06:27Z" finished-at="2019-04-13T11:06:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://www.sociomantic.com/contact/] but found [https://www.sociomantic.com//]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://www.sociomantic.com/contact/] but found [https://www.sociomantic.com//]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at tests.ui.LandingPageTests.TestNavigateFromContactUsLink(LandingPageTests.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNavigateFromContactUsLink -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:06:28Z" finished-at="2019-04-13T11:06:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactUsLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="beforeMethod" is-config="true" duration-ms="2069" started-at="2019-04-13T11:06:28Z" finished-at="2019-04-13T11:06:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:06:28Z" finished-at="2019-04-13T11:06:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactUsLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="TestNavigateFromContactUsLink()[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="TestNavigateFromContactUsLink" duration-ms="1442" started-at="2019-04-13T11:06:30Z" finished-at="2019-04-13T11:06:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNavigateFromContactUsLink -->
        <test-method status="PASS" signature="afterTests()[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="afterTests" is-config="true" duration-ms="108" started-at="2019-04-13T11:06:32Z" finished-at="2019-04-13T11:06:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTests -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:06:32Z" finished-at="2019-04-13T11:06:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.LandingPageTests.TestNavigateFromContactUsLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="baseTestAfterClass()[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="baseTestAfterClass" is-config="true" duration-ms="0" started-at="2019-04-13T11:06:32Z" finished-at="2019-04-13T11:06:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTestAfterClass -->
        <test-method status="PASS" signature="destroyDriver()[pri:0, instance:tests.ui.LandingPageTests@35fc6dc4]" name="destroyDriver" is-config="true" duration-ms="0" started-at="2019-04-13T11:06:32Z" finished-at="2019-04-13T11:06:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroyDriver -->
      </class> <!-- tests.ui.LandingPageTests -->
      <class name="tests.ui.ContactUsTests">
        <test-method status="PASS" signature="baseTestBeforeClass()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="baseTestBeforeClass" is-config="true" duration-ms="8" started-at="2019-04-13T11:04:59Z" finished-at="2019-04-13T11:04:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTestBeforeClass -->
        <test-method status="PASS" signature="initializeDriver()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="initializeDriver" is-config="true" duration-ms="3587" started-at="2019-04-13T11:04:59Z" finished-at="2019-04-13T11:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeDriver -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="beforeClass" is-config="true" duration-ms="9557" started-at="2019-04-13T11:05:03Z" finished-at="2019-04-13T11:05:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logStartMethod" is-config="true" duration-ms="1" started-at="2019-04-13T11:05:13Z" finished-at="2019-04-13T11:05:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsEmailLabelText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="beforeMethod" is-config="true" duration-ms="1455" started-at="2019-04-13T11:05:13Z" finished-at="2019-04-13T11:05:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestContactUsEmailLabelText()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="TestContactUsEmailLabelText" duration-ms="109" started-at="2019-04-13T11:05:14Z" finished-at="2019-04-13T11:05:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestContactUsEmailLabelText -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logEndMethod" is-config="true" duration-ms="1" started-at="2019-04-13T11:05:14Z" finished-at="2019-04-13T11:05:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsEmailLabelText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:05:14Z" finished-at="2019-04-13T11:05:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsTestWithMultipleData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="beforeMethod" is-config="true" duration-ms="1924" started-at="2019-04-13T11:05:14Z" finished-at="2019-04-13T11:05:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestContactUsTestWithMultipleData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="TestContactUsTestWithMultipleData" duration-ms="4095" started-at="2019-04-13T11:05:16Z" data-provider="getData" finished-at="2019-04-13T11:05:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hemant]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Janrao]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hemant.janrao@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test company]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[http://www.testcompany.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Agency]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Algeria]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[9130021557]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Test description]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestContactUsTestWithMultipleData -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:05:20Z" finished-at="2019-04-13T11:05:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsTestWithMultipleData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:05:20Z" finished-at="2019-04-13T11:05:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsTestWithMultipleData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="beforeMethod" is-config="true" duration-ms="1321" started-at="2019-04-13T11:05:20Z" finished-at="2019-04-13T11:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestContactUsTestWithMultipleData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="TestContactUsTestWithMultipleData" duration-ms="3246" started-at="2019-04-13T11:05:22Z" data-provider="getData" finished-at="2019-04-13T11:05:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hemant]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Janrao]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hemant.janrao@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test company]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[http://www.testcompany.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Agency]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Algeria]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[9130021557]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Test description]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestContactUsTestWithMultipleData -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logEndMethod" is-config="true" duration-ms="1" started-at="2019-04-13T11:05:25Z" finished-at="2019-04-13T11:05:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestContactUsTestWithMultipleData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:05:25Z" finished-at="2019-04-13T11:05:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestCreateQueryWithAllFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="beforeMethod" is-config="true" duration-ms="2147" started-at="2019-04-13T11:05:25Z" finished-at="2019-04-13T11:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestCreateQueryWithAllFields()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="TestCreateQueryWithAllFields" duration-ms="3426" started-at="2019-04-13T11:05:27Z" finished-at="2019-04-13T11:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCreateQueryWithAllFields -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:05:31Z" finished-at="2019-04-13T11:05:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestCreateQueryWithAllFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="beforeMethod" is-config="true" duration-ms="1229" started-at="2019-04-13T11:05:31Z" finished-at="2019-04-13T11:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:05:31Z" finished-at="2019-04-13T11:05:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestCreateQueryWithRequiredFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="TestCreateQueryWithRequiredFields()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="TestCreateQueryWithRequiredFields" duration-ms="2872" started-at="2019-04-13T11:05:32Z" finished-at="2019-04-13T11:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCreateQueryWithRequiredFields -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:05:35Z" finished-at="2019-04-13T11:05:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestCreateQueryWithRequiredFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:05:35Z" finished-at="2019-04-13T11:05:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestGotoPrivacyPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="beforeMethod" is-config="true" duration-ms="1289" started-at="2019-04-13T11:05:35Z" finished-at="2019-04-13T11:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestGotoPrivacyPolicyPage()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="TestGotoPrivacyPolicyPage" duration-ms="1060" started-at="2019-04-13T11:05:36Z" finished-at="2019-04-13T11:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestGotoPrivacyPolicyPage -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:05:37Z" finished-at="2019-04-13T11:05:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestGotoPrivacyPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:05:37Z" finished-at="2019-04-13T11:05:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestMandatoryFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="beforeMethod" is-config="true" duration-ms="1746" started-at="2019-04-13T11:05:37Z" finished-at="2019-04-13T11:05:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestMandatoryFields()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="TestMandatoryFields" duration-ms="13265" started-at="2019-04-13T11:05:39Z" finished-at="2019-04-13T11:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMandatoryFields -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:05:52Z" finished-at="2019-04-13T11:05:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestMandatoryFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="logStartMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logStartMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:05:52Z" finished-at="2019-04-13T11:05:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestMoreThan500CharactersNotAllowed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStartMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="beforeMethod" is-config="true" duration-ms="1636" started-at="2019-04-13T11:05:52Z" finished-at="2019-04-13T11:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestMoreThan500CharactersNotAllowed()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="TestMoreThan500CharactersNotAllowed" duration-ms="14431" started-at="2019-04-13T11:05:54Z" finished-at="2019-04-13T11:06:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMoreThan500CharactersNotAllowed -->
        <test-method status="PASS" signature="afterTests()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="afterTests" is-config="true" duration-ms="99" started-at="2019-04-13T11:06:08Z" finished-at="2019-04-13T11:06:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTests -->
        <test-method status="PASS" signature="logEndMethod(java.lang.reflect.Method)[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="logEndMethod" is-config="true" duration-ms="0" started-at="2019-04-13T11:06:08Z" finished-at="2019-04-13T11:06:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ui.ContactUsTests.TestMoreThan500CharactersNotAllowed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEndMethod -->
        <test-method status="PASS" signature="baseTestAfterClass()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="baseTestAfterClass" is-config="true" duration-ms="0" started-at="2019-04-13T11:06:08Z" finished-at="2019-04-13T11:06:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTestAfterClass -->
        <test-method status="PASS" signature="destroyDriver()[pri:0, instance:tests.ui.ContactUsTests@77e4c80f]" name="destroyDriver" is-config="true" duration-ms="0" started-at="2019-04-13T11:06:08Z" finished-at="2019-04-13T11:06:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroyDriver -->
      </class> <!-- tests.ui.ContactUsTests -->
    </test> <!-- all-tests -->
  </suite> <!-- Suite2 -->
</testng-results>
